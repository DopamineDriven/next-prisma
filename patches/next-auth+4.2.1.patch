diff --git a/node_modules/next-auth/core/types.d.ts b/node_modules/next-auth/core/types.d.ts
index 9c1c63a..b019132 100644
--- a/node_modules/next-auth/core/types.d.ts
+++ b/node_modules/next-auth/core/types.d.ts
@@ -234,7 +234,8 @@ export interface Account extends Record<string, unknown>, DefaultAccount {
 export interface DefaultProfile {
     sub?: string;
     name?: string;
-    email?: string;
+  email?: string;
+  username?: string;
     image?: string;
 }
 /** The OAuth profile returned from your provider */
@@ -403,7 +404,8 @@ export interface DefaultSession extends Record<string, unknown> {
     user?: {
         name?: string | null;
         email?: string | null;
-        image?: string | null;
+      image?: string | null;
+      username?: string | null;
     };
     expires: ISODateString;
 }
@@ -417,6 +419,7 @@ export interface DefaultSession extends Record<string, unknown> {
  * [`session` callback](https://next-auth.js.org/configuration/callbacks#jwt-callback)
  */
 export interface Session extends Record<string, unknown>, DefaultSession {
+
 }
 export declare type SessionStrategy = "jwt" | "database";
 /** [Documentation](https://next-auth.js.org/configuration/options#session) */
@@ -447,7 +450,8 @@ export interface SessionOptions {
     updateAge: number;
 }
 export interface DefaultUser {
-    id: string;
+  id: string;
+  username?: string | null;
     name?: string | null;
     email?: string | null;
     image?: string | null;
diff --git a/node_modules/next-auth/jwt/types.d.ts b/node_modules/next-auth/jwt/types.d.ts
index e4c1074..eca24d2 100644
--- a/node_modules/next-auth/jwt/types.d.ts
+++ b/node_modules/next-auth/jwt/types.d.ts
@@ -2,7 +2,8 @@
 import type { Awaitable } from "..";
 export interface DefaultJWT extends Record<string, unknown> {
     name?: string | null;
-    email?: string | null;
+  email?: string | null;
+  username?: string | null;
     picture?: string | null;
     sub?: string;
 }
diff --git a/node_modules/next-auth/providers/github.d.ts b/node_modules/next-auth/providers/github.d.ts
index 43f2fab..6da55b4 100644
--- a/node_modules/next-auth/providers/github.d.ts
+++ b/node_modules/next-auth/providers/github.d.ts
@@ -1,2 +1,41 @@
 /** @type {import(".").OAuthProvider} */
-export default function GitHub(options: Partial<import("./oauth").OAuthConfig<any>>): import("./oauth").OAuthConfig<any>;
+
+
+export interface GitHubProfile {
+  data: {
+    login: string;
+    id: number;
+    node_id: string;
+    avatar_url: string;
+    url: string;
+    html_url?: string;
+    followers_url?: string;
+    following_url?: string;
+    gists_url?: string;
+    starred_url?: string;
+    subscriptions_url?: string;
+    organizations_url?: string;
+    repos_url?: string;
+    events_url?: string;
+    received_events_url?: string;
+    type: "User";
+    site_admin: boolean;
+    name?: string;
+    company?: string;
+    blog?: string;
+    location?: string;
+    email: string;
+    hireable: boolean;
+    bio?: string;
+    twitter_username?: string;
+    public_repos: number;
+    public_gists: number;
+    followers: number;
+    following: number;
+    // ISO-8601
+    created_at?: ReturnType<typeof Date['prototype']['toISOString']>
+    updated_at?: ReturnType<typeof Date['prototype']['toISOString']>
+  };
+}
+
+export default function GitHub<P extends Record<string, any> = GitHubProfile>(options: Partial<import("./oauth").OAuthUserConfig<P>>): import("./oauth").OAuthConfig<P>;
diff --git a/node_modules/next-auth/providers/twitter.d.ts b/node_modules/next-auth/providers/twitter.d.ts
index b35290c..e0b636c 100644
--- a/node_modules/next-auth/providers/twitter.d.ts
+++ b/node_modules/next-auth/providers/twitter.d.ts
@@ -97,43 +97,49 @@ export declare function TwitterLegacy<P extends Record<string, any> = TwitterLeg
 /**
  * [Documentation](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me)
  */
-export interface TwitterProfile {
-    data: {
-        id: string;
-        name: string;
-        username: string;
-        location?: string;
-        entities?: {
-            url: {
-                urls: Array<{
-                    start: number;
-                    end: number;
-                    url: string;
-                    expanded_url: string;
-                    display_url: string;
-                }>;
-            };
-            description: {
-                hashtags: Array<{
-                    start: number;
-                    end: number;
-                    tag: string;
-                }>;
-            };
-        };
-        verified?: boolean;
-        description?: string;
-        url?: string;
-        profile_image_url?: string;
-        protected?: boolean;
-        pinned_tweet_id?: string;
-        created_at?: string;
-    };
-    includes?: {
-        tweets?: Array<{
-            id: string;
-            text: string;
-        }>;
+ export interface TwitterProfile {
+  data: {
+      id: string;
+      name: string;
+      username: string;
+      location?: string;
+      entities?: {
+          url: {
+              urls: Array<{
+                  start: number;
+                  end: number;
+                  url: string;
+                  expanded_url: string;
+                  display_url: string;
+              }>;
+          };
+          description: {
+              hashtags: Array<{
+                  start: number;
+                  end: number;
+                  tag: string;
+              }>;
+          };
+      };
+    public_metrics?: {
+      following_count: number;
+      followers_count: number;
+      tweet_count: number;
+      listed_count: number;
     };
+      verified?: boolean;
+      description?: string;
+      url?: string;
+      profile_image_url?: string;
+      protected?: boolean;
+      pinned_tweet_id?: string;
+      created_at?: string;
+  };
+  includes?: {
+      tweets?: Array<{
+          id: string;
+          text: string;
+      }>;
+  };
 }
 export default function Twitter<P extends Record<string, any> = TwitterLegacyProfile | TwitterProfile>(options: OAuthUserConfig<P>): OAuthConfig<P>;
