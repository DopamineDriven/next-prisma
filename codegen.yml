overwrite: true
generates:
  ./src/graphql/generated/graphql.schema.graphql:
    schema:
      ${NEST_GQL_ENDPOINT}:
        headers:
          authorization: ${NEXT_TOKEN_CODEGEN}

    documents: "./src/graphql/**/*.graphql"
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - schema-ast
    config:
      includeIntrospectionTypes: true
      commentDescriptions: true
      includeDirectives: true
  ./src/graphql/generated/introspection.schema.json:
    schema:
      ${NEST_GQL_ENDPOINT}:
        headers:
          authorization: ${NEXT_TOKEN_CODEGEN}
    documents: "./src/graphql/**/*.graphql"
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - introspection
  ./src/graphql/generated/resolver-types.ts:
    schema:
      ${NEST_GQL_ENDPOINT}:
        headers:
          authorization: ${NEXT_TOKEN_CODEGEN}
    documents: "./src/graphql/**/*.graphql"
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - typescript
      - typescript-resolvers
    config:
      useIndexSignature: true
  ./src/graphql/generated/graphql.ts:
    schema:
      ${NEST_GQL_ENDPOINT}:
        headers:
          authorization: ${NEXT_TOKEN_CODEGEN}
    documents: "./src/graphql/**/*.graphql"
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - typescript:
          namingConvention: keep
          noExport: false
          enumPrefix: true
          numericEnums: false
          wrapFieldDefinitions: true
          skipTypename: false
          nonOptionalTypename: false
      - add:
          content:
            - "import { ResolverContext } from '@/apollo/resolver-context'"
            - "import { Upload } from 'graphql-upload'"
            - "import { GraphQLDate, GraphQLDateTime, GraphQLTime, GraphQLJSON, GraphQLJSONObject, JSONResolver, GraphQLBigInt } from 'graphql-scalars';"
            - "import { DeepPartial } from 'utility-types';"
      - typescript-document-nodes:
          strictScalars: true
          gqlImport: "@apollo/client#gql"
      - typescript-resolvers:
          defaultMapper: DeepPartial<{T}>
          optionalInfoArgument: true
          contextType: ResolverContext
          makeResolverTypeCallable: true
          noSchemaStitching: false
        config:
          maybeValue: "T | null"
      - typescript-operations:
          dedupeFragments: true
      - typescript-react-apollo:
          addDocBlocks: true
          reactApolloVersion: 3
          withRefetchFn: true
      - named-operations-object
    config:
      useIndexSignature: true
      scalars:
        JSON: typeof GraphQLJSON
        JSONObject: typeof GraphQLJSONObject
        Upload: File
        Date: typeof GraphQLDate
        DateTime: Date
        Time: typeof GraphQLTime
        BigInt: typeof GraphQLBigInt
        UUID: typeof String
        PhoneNumber: typeof String
      reactApolloVersion: 3
      withHooks: true
      numericEnums: false
      namingConvention: keep
      addDocBlocks: true
  ./src/apollo/fragment-matcher.ts:
    schema:
      ${NEST_GQL_ENDPOINT}:
        headers:
          authorization: ${NEXT_TOKEN_CODEGEN}
    documents: "./src/graphql/**/*.graphql"
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - fragment-matcher
    config:
      useExplicitTyping: true
      apolloClientVersion: 3
  ./src/apollo/helpers.ts:
    schema:
      ${NEST_GQL_ENDPOINT}:
        headers:
          authorization: ${NEXT_TOKEN_CODEGEN}
    documents: "./src/graphql/**/*.graphql"
    hooks:
      afterOneFileWrite:
        - prettier --write
    plugins:
      - typescript-apollo-client-helpers
