### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Account implements Node {
  access_token: String
  expires_at: Int
  id: String!
  id_token: String
  oauth_token: String
  oauth_token_secret: String
  provider: String
  providerAccountId: String
  refresh_token: String
  scope: String
  session_state: String
  token_type: String
  type: String
  user: User
  userId: String
}

type AccountConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [AccountEdge]

  """
  Flattened list of Account type
  """
  nodes: [Account]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type AccountEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Account
}

input AccountListRelationFilter {
  every: AccountWhereInput
  none: AccountWhereInput
  some: AccountWhereInput
}

input AccountOrderBy {
  provider: SortOrderEnum
  providerAccountId: SortOrderEnum
}

input AccountOrderByRelationAggregateInput {
  _count: SortOrderEnum
}

input AccountWhereInput {
  AND: [AccountWhereInput!]
  NOT: [AccountWhereInput!]
  OR: [AccountWhereInput!]
  access_token: StringNullableFilter
  expires_at: IntNullableFilter
  id: StringFilter
  id_token: StringNullableFilter
  oauth_token: StringNullableFilter
  oauth_token_secret: StringNullableFilter
  provider: StringFilter
  providerAccountId: StringFilter
  refresh_token: StringNullableFilter
  scope: StringNullableFilter
  session_state: StringNullableFilter
  token_type: StringNullableFilter
  type: StringFilter
  user: UserRelationFilter
  userId: StringFilter
}

type Bio {
  body: String
  createdAt: DateTime
  headline: String
  intro: String
  status: String
  updatedAt: DateTime
}

input BioListRelationFilter {
  every: BioWhereInput
  none: BioWhereInput
  some: BioWhereInput
}

input BioRelationFilter {
  is: BioWhereInput
  isNot: BioWhereInput
}

input BioWhereInput {
  AND: [BioWhereInput!]
  NOT: [BioWhereInput!]
  OR: [BioWhereInput!]
  body: StringNullableFilter
  createdAt: DateTimeFilter
  headline: StringFilter
  intro: StringNullableFilter
  status: StringNullableFilter
  updatedAt: DateTimeNullableFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Category {
  createdAt: DateTime
  creatorId: String
  entryId: String
  name: String
  root: Boolean
  updatedAt: DateTime
}

type Comment implements Node {
  author: User
  authorId: String
  body: String
  createdAt: DateTime!
  entry: Entry
  entryId: String
  id: String!
  position: String
  reactions: [Reaction]
  updatedAt: DateTime
}

type CommentConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [CommentEdge]

  """
  Flattened list of Comment type
  """
  nodes: [Comment]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type CommentEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Comment
}

input CommentListRelationFilter {
  every: CommentWhereInput
  none: CommentWhereInput
  some: CommentWhereInput
}

input CommentOrderByRelationAggregateInput {
  _count: SortOrderEnum
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  author: UserRelationFilter
  authorId: StringNullableFilter
  body: StringNullableFilter
  createdAt: DateTimeFilter
  entry: EntryRelationFilter
  entryId: StringNullableFilter
  id: StringFilter
  position: StringNullableFilter
  reactions: EnumCommentReactionsNullableListFilter
  updatedAt: DateTimeNullableFilter
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Entry implements Node {
  author: User
  authorId: String
  categories: [Category]
  comments(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    searchString: String!
    take: Int
  ): CommentConnection
  content: String
  createdAt: DateTime
  featuredImage: MediaItem
  id: String!
  published: Boolean
  reactions: [Reaction]
  title: String
  updatedAt: DateTime
}

type EntryConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [EntryEdge]

  """
  Flattened list of Entry type
  """
  nodes: [Entry]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type EntryEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Entry
}

input EntryListRelationFilter {
  every: EntryWhereInput
  none: EntryWhereInput
  some: EntryWhereInput
}

input EntryOrderBy {
  createdAt: SortOrderEnum
  title: SortOrderEnum
  updatedAt: SortOrderEnum
}

input EntryOrderByRelationAggregateInput {
  _count: SortOrderEnum
}

input EntryRelationFilter {
  is: EntryWhereInput
  isNot: EntryWhereInput
}

input EntryWhereInput {
  AND: [EntryWhereInput!]
  NOT: [EntryWhereInput!]
  OR: [EntryWhereInput!]
  author: UserRelationFilter
  authorId: StringNullableFilter
  categoryId: StringNullableFilter
  comments: CommentListRelationFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  featuredImage: String
  id: StringFilter
  published: BoolFilter
  title: StringFilter
  updatedAt: DateTimeNullableFilter
}

input EnumCommentReactionsNullableListFilter {
  equals: [Reaction!]
  has: Reaction
  hasEvery: [Reaction!]
  hasSome: [Reaction!]
  isEmpty: Boolean
}

input EnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input EnumMediaItemDestinationNullableFilter {
  equals: MediaItemDestination
  in: [MediaItemDestination!]
  not: NestedEnumMediaItemDestinationNullableFilter
  notIn: [MediaItemDestination!]
}

input EnumMimeTypeNullableFilter {
  equals: MimeType
  in: [MimeType!]
  not: NestedEnumMimeTypeNullableFilter
  notIn: [MimeType!]
}

input EnumPronounsNullableFilter {
  equals: Pronouns
  in: [Pronouns!]
  not: NestedEnumPronounsNullableFilter
  notIn: [Pronouns!]
}

input EnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input EnumUserStatusNullableFilter {
  equals: UserStatus
  in: [UserStatus!]
  not: NestedEnumUserStatusNullableFilter
  notIn: [UserStatus!]
}

input FindManyUsersPaginatedInput {
  cursor: UserWhereUniqueInput
  distinct: [UserScalarFieldsEnum!]
  orderBy: [UserOrderByWithRelationAndSearchRelevanceInput!]!
  pagination: PaginationArgsInput = {
    after: null
    before: null
    first: 10
    last: null
  }
  skip: Int
  take: Int
  where: UserWhereInput
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

"""
User Gender
"""
enum Gender {
  FEMALE
  MALE
  OTHER
  UNCERTAIN
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type MediaItem {
  ariaLabel: String
  caption: String
  destination: MediaItemDestination
  fileLastModified: DateTime
  filename: String
  filetype: MimeType
  height: Float!
  mediaItemId: String
  quality: Int!
  size: String
  src: String
  srcSet: String
  title: String
  updatedAt: DateTime
  uploadedAt: DateTime
  width: Float!
}

"""
Media Item Destination
"""
enum MediaItemDestination {
  AVATAR
  COMMENT_ATTACHMENT
  COVER_IMAGE
  ENTRY_ATTACHMENT
  FEATURED_IMAGE
}

input MediaItemInput {
  ariaLabel: String
  caption: String
  destination: MediaItemDestination
  fileLastModified: DateTime
  filename: String
  filetype: MimeType
  height: Float
  mediaItemId: String
  quality: Int
  size: String
  src: String
  srcSet: String
  title: String
  updatedAt: DateTime
  uploadedAt: DateTime
  width: Float
}

input MediaItemListRelationFilter {
  every: MediaItemWhereInput
  none: MediaItemWhereInput
  some: MediaItemWhereInput
}

input MediaItemRelationFilter {
  is: MediaItemWhereInput
  isNot: MediaItemWhereInput
}

input MediaItemWhereInput {
  AND: [MediaItemWhereInput!]
  NOT: [MediaItemWhereInput!]
  OR: [MediaItemWhereInput!]
  ariaLabel: StringNullableFilter
  caption: StringNullableFilter
  destination: EnumMediaItemDestinationNullableFilter
  fileLastModified: DateTimeNullableFilter
  filename: StringNullableFilter
  filetype: EnumMimeTypeNullableFilter
  height: FloatNullableFilter
  mediaItemId: StringFilter
  quality: IntNullableFilter
  size: StringNullableFilter
  src: StringNullableFilter
  srcSet: StringNullableFilter
  title: StringNullableFilter
  updatedAt: DateTimeNullableFilter
  uploadedAt: DateTimeFilter
  user: UserRelationFilter
  userId: StringNullableFilter
  width: FloatNullableFilter
}

"""
Mime Types
"""
enum MimeType {
  AVIF
  BMP
  GIF
  JPEG
  PNG
  SVG
  TIFF
  WEBP
}

type Mutation {
  CreateNewUser(
    email: String!
    expires: Date!
    image: String
    name: String
    sessionToken: String!
  ): User
  DeleteUser(id: String!): User
  createEntry(
    """
    Entry Content
    """
    content: String

    """
    Entry Image
    """
    featuredImage: String
    publish: Boolean

    """
    Entry Title
    """
    title: String

    """
    User Id
    """
    userId: String
  ): Entry
  createProfile(
    bio: String
    coverImage: String
    dob: String
    email: String!

    """
    compliant with standard E164 formatting (+15559871234)
    """
    phoneNumber: String
    userId: String
  ): Profile
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input NestedEnumMediaItemDestinationNullableFilter {
  equals: MediaItemDestination
  in: [MediaItemDestination!]
  not: NestedEnumMediaItemDestinationNullableFilter
  notIn: [MediaItemDestination!]
}

input NestedEnumMimeTypeNullableFilter {
  equals: MimeType
  in: [MimeType!]
  not: NestedEnumMimeTypeNullableFilter
  notIn: [MimeType!]
}

input NestedEnumPronounsNullableFilter {
  equals: Pronouns
  in: [Pronouns!]
  not: NestedEnumPronounsNullableFilter
  notIn: [Pronouns!]
}

input NestedEnumRoleNullableFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleNullableFilter
  notIn: [Role!]
}

input NestedEnumUserStatusNullableFilter {
  equals: UserStatus
  in: [UserStatus!]
  not: NestedEnumUserStatusNullableFilter
  notIn: [UserStatus!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

interface Node {
  id: String!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

input PaginationArgsInput {
  after: String = null
  before: String = null
  first: Int = 10
  last: Int = null
}

"""
A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234.
"""
scalar PhoneNumber

type Profile implements Node {
  coverImage: MediaItem
  dob: Date
  id: String!
  memberSince: DateTime
  phoneNumber: PhoneNumber
  user: User
  userId: String
}

type ProfileConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProfileEdge]

  """
  Flattened list of Profile type
  """
  nodes: [Profile]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProfileEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Profile
}

input ProfileOrderBy {
  memberSince: SortOrderEnum
}

enum ProfileOrderByRelevanceFieldEnum {
  activiyFeed
  bio
  city
  country
  coverPhoto
  dob
  id
  occupation
  phoneNumber
  recentActivity
  userId
}

input ProfileOrderByRelevanceInput {
  fields: [ProfileOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrderEnum!
}

input ProfileOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProfileOrderByRelevanceInput
  activiyFeed: SortOrderEnum
  bio: SortOrderEnum
  city: SortOrderEnum
  country: SortOrderEnum
  coverPhoto: SortOrderEnum
  dob: SortOrderEnum
  gender: SortOrderEnum
  id: SortOrderEnum
  lastSeen: SortOrderEnum
  memberSince: SortOrderEnum
  occupation: SortOrderEnum
  phoneNumber: SortOrderEnum
  pronouns: SortOrderEnum
  recentActivity: SortOrderEnum
  user: UserOrderByWithRelationAndSearchRelevanceInput
  userId: SortOrderEnum
}

input ProfileRelationFilter {
  is: ProfileWhereInput
  isNot: ProfileWhereInput
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  activiyFeed: StringNullableFilter
  bio: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  coverPhoto: StringNullableFilter
  dob: StringNullableFilter
  gender: EnumGenderNullableFilter
  id: StringFilter
  lastSeen: DateTimeNullableFilter
  memberSince: DateTimeFilter
  occupation: StringNullableFilter
  phoneNumber: StringNullableFilter
  pronouns: EnumPronounsNullableFilter
  recentActivity: StringNullableFilter
  user: UserRelationFilter
  userId: StringNullableFilter
}

"""
User pronouns
"""
enum Pronouns {
  HE_HIM_HIS
  NOT_LISTED
  PREFER_NOT_TO_SAY
  SHE_HER_HERS
  THEY_THEM_THEIRS
}

type Query {
  FilterUsers(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    searchString: String!
  ): UserConnection
  GetAllEntries(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    searchString: String!
    take: Int
  ): EntryConnection
  GetAllSessions(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    orderBy: SessionOrderBy!
  ): SessionConnection
  GetEntry(id: String!): Entry
  GetSession(id: String!): Session
  SearchByUserEmail(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    search: String! = ""
  ): UserConnection
  SearchEntriesByTitle(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    searchString: String!
  ): EntryConnection
  accounts(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    userId: String!
  ): AccountConnection
  allAccounts(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    take: Int = 10
  ): AccountConnection
  allEntries(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    take: Int!
  ): EntryConnection
  entries(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): EntryConnection
  entryFeed(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
    searchString: String = ""
    skip: Int = 0
    take: Int = 10
  ): EntryConnection
  getUserByAccount(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int
    id: String!

    """
    Returns the last n elements from the list.
    """
    last: Int
    provider: String!
    providerAccountId: String!
  ): AccountConnection
  node(id: String!): Node
  profiles(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): ProfileConnection
  session(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): SessionConnection
  userAccount(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): AccountConnection
  userByEmail(email: String!): User
  userById(id: String!): User
  userEntries(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int
    id: String

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): EntryConnection
  usersQuery(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): UserConnection
  verificationTokens(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): VerificationTokenConnection
}

enum QueryModeEnum {
  default
  insensitive
}

"""
Comment/Entry Reactions
"""
enum Reaction {
  ANGRY
  CARE
  CONFUSED
  DISLIKE
  LAUGH
  LIKE
  LOVE
  PARROT
  ROCKET
  TEARS
  WOW
}

"""
User Role
"""
enum Role {
  ADMIN
  MAINTAINER
  SUPERADMIN
  USER
}

type Session implements Node {
  expires: DateTime
  id: String!
  sessionToken: String
  user: User
  userId: String
}

type SessionConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [SessionEdge]

  """
  Flattened list of Session type
  """
  nodes: [Session]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type SessionEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Session
}

input SessionListRelationFilter {
  every: SessionWhereInput
  none: SessionWhereInput
  some: SessionWhereInput
}

input SessionOrderBy {
  expires: SortOrderEnum
  id: SortOrderEnum
  sessionToken: SortOrderEnum
  userId: SortOrderEnum
}

input SessionOrderByRelationAggregateInput {
  _count: SortOrderEnum
}

input SessionWhereInput {
  AND: [SessionWhereInput!]
  NOT: [SessionWhereInput!]
  OR: [SessionWhereInput!]
  expires: DateTimeNullableFilter
  id: StringFilter!
  sessionToken: StringNullableFilter
  user: UserRelationFilter
  userId: StringNullableFilter
}

"""
Direction in which to order one or more corresponding fields
"""
enum SortOrderEnum {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryModeEnum
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryModeEnum
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

"""
A field whose value is a generic Universally Unique Identifier: https://en.wikipedia.org/wiki/Universally_unique_identifier.
"""
scalar UUID

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

type User implements Node {
  _count: UserCount!
  accounts(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): AccountConnection
  comments(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): CommentConnection
  email: String
  emailVerified: DateTime
  entries(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): EntryConnection
  id: String!
  image: String
  imageMeta: MediaItem
  name: String
  profile: Profile
  role: Role
  sessions(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor
    """
    before: String

    """
    Returns the first n elements from the list.
    """
    first: Int

    """
    Returns the last n elements from the list.
    """
    last: Int
  ): SessionConnection
  status: UserStatus
}

type UserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [UserEdge]

  """
  Flattened list of User type
  """
  nodes: [User]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type UserCount {
  accounts: Int!
  comments: Int!
  entries: Int!
  sessions: Int!
}

type UserEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: User
}

enum UserOrderByRelevanceFieldEnum {
  email
  firstName
  id
  image
  lastName
  password
}

input UserOrderByRelevanceInput {
  fields: [UserOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrderEnum!
}

input UserOrderByWithRelationAndSearchRelevanceInput {
  _relevance: UserOrderByRelevanceInput
  accounts: AccountOrderByRelationAggregateInput
  comments: CommentOrderByRelationAggregateInput
  createdAt: SortOrderEnum
  email: SortOrderEnum
  emailVerified: SortOrderEnum
  entries: EntryOrderByRelationAggregateInput
  id: SortOrderEnum
  image: SortOrderEnum
  name: SortOrderEnum
  profile: ProfileOrderByWithRelationAndSearchRelevanceInput
  role: SortOrderEnum
  sessions: SessionOrderByRelationAggregateInput
  status: SortOrderEnum
  updatedAt: SortOrderEnum
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserScalarFieldsEnum {
  createdAt
  email
  emailVerified
  firstName
  id
  image
  lastName
  password
  role
  status
  updatedAt
}

"""
User Status
"""
enum UserStatus {
  BANNED
  DEACTIVATED
  DELETED
  OFFLINE
  ONLINE
  SUSPENDED
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  accounts: AccountListRelationFilter
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  emailVerified: DateTimeNullableFilter
  entries: EntryListRelationFilter
  id: StringFilter
  image: StringNullableFilter
  imageMeta: MediaItemRelationFilter
  name: StringNullableFilter
  profile: ProfileRelationFilter
  role: EnumRoleNullableFilter
  sessions: SessionListRelationFilter
  status: EnumUserStatusNullableFilter
  updatedAt: DateTimeNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}

type VerificationToken implements Node {
  expires: DateTime
  id: String!
  identifier: String
  token: String
}

type VerificationTokenConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [VerificationTokenEdge]

  """
  Flattened list of VerificationToken type
  """
  nodes: [VerificationToken]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type VerificationTokenEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: VerificationToken
}
