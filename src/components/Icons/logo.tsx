import { RecursiveConditional } from "@/types/helpers";
import { SVGAttribs } from "@/types/mapped";
import { SVGProps, SVGAttributes } from "react";
type SvgSvg = RecursiveConditional<SVGAttributes<SVGSVGElement>>;
type SvgCircles = RecursiveConditional<SVGProps<SVGCircleElement>>;
const Logo = ({
  ...props
}: SVGAttribs<"className" | "aria-hidden" | "stroke" | "fill">) => {
  return (
    <svg
      {...props}
      width='65'
      height='65'
      viewBox='0 0 65 65'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'>
      <circle cx='32.5' cy='32.5' r='31.5' stroke='#151515' strokeWidth='2' />
      <path
        d='M30.116 39H32.816L27.956 26.238H25.076L20.18 39H22.808L23.87 36.084H29.054L30.116 39ZM26.462 28.992L28.226 33.816H24.698L26.462 28.992ZM40.7482 39H43.5202L40.7842 33.78C42.4582 33.294 43.5022 31.944 43.5022 30.162C43.5022 27.948 41.9182 26.238 39.4342 26.238H34.4482V39H36.9502V34.086H38.2462L40.7482 39ZM36.9502 31.944V28.398H38.9662C40.2262 28.398 40.9642 29.1 40.9642 30.18C40.9642 31.224 40.2262 31.944 38.9662 31.944H36.9502Z'
        fill='#151515'
      />
    </svg>
  );
};

export default Logo;
/**
 * use the       <use xlinkHref=''></use>
 *
 * https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement
 */
/**
 *
 *
 * import type { SVGAttribs } from "@/types/mapped";

export default function CortinaLogo({
  width,
  height,
  ...props
}: SVGAttribs<"width" | "height" | "className" | "aria-hidden">) {
  return (
    <svg
      {...props}
      width={width ? width : "245.6"}
      height={height ? height : "61.2"}
      viewBox='0 0 307 74'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'>
      <g clipPath={`url(#clip0)`}>
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M160.11 25.78H153V16.2H160.11V0H169.7V16.2H177.17V25.78H169.7V54.18C169.691 55.4396 169.931 56.6887 170.406 57.8553C170.881 59.022 171.582 60.0833 172.468 60.9781C173.355 61.873 174.409 62.5839 175.571 63.0699C176.734 63.5559 177.98 63.8074 179.24 63.81H182.3V73.35H179.24C174.157 73.3447 169.285 71.3233 165.691 67.7294C162.097 64.1355 160.075 59.2626 160.07 54.18L160.11 25.78ZM53.8999 30.941H42.0199C39.2305 28.2144 35.6753 26.4041 31.8295 25.752C27.9837 25.1 24.0305 25.6373 20.4982 27.2921C16.966 28.947 14.0229 31.6406 12.0625 35.0128C10.102 38.385 9.21755 42.2753 9.52726 46.1637C9.83696 50.0521 11.3261 53.7533 13.7956 56.7727C16.2652 59.7921 19.5975 61.9858 23.3472 63.0607C27.0969 64.1355 31.0853 64.0403 34.7794 62.7877C38.4735 61.5351 41.6973 59.1849 44.0199 56.051H55.0199C52.4318 61.9744 47.9134 66.8463 42.2014 69.8724C36.4894 72.8986 29.9207 73.9005 23.5663 72.7147C17.2118 71.529 11.4465 68.2256 7.21022 63.3432C2.97394 58.4607 0.516603 52.2871 0.238833 45.829C-0.0389356 39.3709 1.87926 33.0091 5.68067 27.7809C9.48208 22.5527 14.9425 18.7665 21.1716 17.0396C27.4008 15.3126 34.0312 15.7468 39.982 18.2713C45.9327 20.7958 50.8528 25.2618 53.9399 30.941H53.8999ZM116.42 44.71C116.42 50.3883 114.736 55.9391 111.582 60.6604C108.427 65.3818 103.943 69.0616 98.6969 71.2346C93.4508 73.4076 87.6782 73.9761 82.109 72.8683C76.5398 71.7606 71.4241 69.0262 67.409 65.011C63.3938 60.9959 60.6594 55.8802 59.5517 50.311C58.4439 44.7418 59.0124 38.9692 61.1854 33.7232C63.3584 28.4771 67.0383 23.9932 71.7596 20.8385C76.4809 17.6838 82.0317 16 87.71 16C95.3228 16.0053 102.622 19.0318 108.005 24.4148C113.388 29.7978 116.415 37.0973 116.42 44.71ZM68.54 44.71C68.54 48.5015 69.6643 52.2078 71.7707 55.3603C73.8772 58.5128 76.8711 60.9698 80.374 62.4208C83.8768 63.8717 87.7313 64.2513 91.4499 63.5117C95.1685 62.772 98.5843 60.9462 101.265 58.2652C103.946 55.5843 105.772 52.1685 106.512 48.4499C107.251 44.7313 106.872 40.8768 105.421 37.374C103.97 33.8711 101.513 30.8772 98.3603 28.7707C95.2078 26.6643 91.5015 25.54 87.71 25.54C85.1917 25.5387 82.6979 26.0336 80.3709 26.9964C78.0439 27.9591 75.9295 29.371 74.1483 31.1512C72.3672 32.9315 70.9542 35.0452 69.9902 37.3716C69.0262 39.6981 68.53 42.1917 68.53 44.71H68.54ZM148.62 25.54V16C144.855 16.0039 141.128 16.7499 137.652 18.1952C134.175 19.6405 131.018 21.7568 128.36 24.4232C125.702 27.0896 123.595 30.2537 122.161 33.7346C120.726 37.2156 119.992 40.9451 120 44.71V73.42H129.54V44.71C129.532 42.1979 130.02 39.7089 130.975 37.3854C131.93 35.0619 133.333 32.9495 135.105 31.169C136.878 29.3885 138.983 27.9749 141.302 27.009C143.621 26.0431 146.108 25.5439 148.62 25.54ZM194.143 8.1429C195.037 7.24835 195.54 6.03508 195.54 4.77C195.54 3.50491 195.037 2.29164 194.143 1.39709C193.248 0.502546 192.035 0 190.77 0C189.505 0 188.292 0.502546 187.397 1.39709C186.503 2.29164 186 3.50491 186 4.77C186 6.03508 186.503 7.24835 187.397 8.1429C188.292 9.03745 189.505 9.53999 190.77 9.53999C192.035 9.53999 193.248 9.03745 194.143 8.1429ZM195.54 73.35V15.93L186 15.92V73.35H195.54ZM200 38.32C200 32.4004 202.352 26.7232 206.537 22.5374C210.723 18.3516 216.4 16 222.32 16C228.24 16 233.917 18.3516 238.103 22.5374C242.288 26.7232 244.64 32.4004 244.64 38.32V73.42H235.1V38.32C235.1 34.9305 233.754 31.6799 231.357 29.2832C228.96 26.8865 225.709 25.54 222.32 25.54C218.931 25.54 215.68 26.8865 213.283 29.2832C210.886 31.6799 209.54 34.9305 209.54 38.32V73.42H200V38.32ZM296.88 73.42H306.42V44.71C306.42 39.0317 304.736 33.4809 301.582 28.7596C298.427 24.0383 293.943 20.3584 288.697 18.1854C283.451 16.0124 277.678 15.4439 272.109 16.5517C266.54 17.6594 261.424 20.3938 257.409 24.409C253.394 28.4241 250.659 33.5398 249.552 39.109C248.444 44.6782 249.012 50.4508 251.185 55.6969C253.358 60.9429 257.038 65.4268 261.76 68.5815C266.481 71.7362 272.032 73.42 277.71 73.42C284.797 73.4381 291.635 70.8057 296.88 66.04V73.42ZM261.89 55.324C259.781 52.1853 258.65 48.4916 258.64 44.71C258.628 42.1977 259.113 39.7077 260.066 37.3831C261.018 35.0584 262.421 32.9449 264.193 31.1637C265.965 29.3826 268.071 27.9689 270.391 27.0038C272.71 26.0388 275.198 25.5413 277.71 25.54C281.492 25.5301 285.191 26.6418 288.341 28.7346C291.491 30.8273 293.949 33.807 295.405 37.2969C296.862 40.7868 297.25 44.6302 296.522 48.341C295.794 52.0519 293.982 55.4635 291.315 58.1444C288.648 60.8254 285.246 62.6553 281.539 63.4027C277.832 64.1502 273.987 63.7816 270.489 62.3436C266.992 60.9056 263.999 58.4628 261.89 55.324Z'
          fill={`url(#paint0_linear)`}
        />
      </g>
      <defs>
        <linearGradient
          id='paint0_linear'
          x1='5'
          y1='49'
          x2='299'
          y2='56'
          gradientUnits='userSpaceOnUse'>
          <stop offset='0' stopColor='#0F6CB2' />
          <stop offset='1' stopColor='#ffffff' />
        </linearGradient>
        <clipPath id='clip0'>
          <rect width='306.55' height='73.35' fill='white' />
        </clipPath>
      </defs>
    </svg>
  );
}

 */
